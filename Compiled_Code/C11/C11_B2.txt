main:
        push    rbp
        mov     rbp, rsp
        sub     rsp, 96
        mov     DWORD PTR [rbp-4], 0
        mov     DWORD PTR [rbp-8], 0
        jmp     .L2
.L23:
        mov     DWORD PTR [rbp-12], 1
        jmp     .L3
.L4:
        mov     eax, DWORD PTR [rbp-12]
        add     DWORD PTR [rbp-4], eax
        add     DWORD PTR [rbp-12], 1
.L3:
        cmp     DWORD PTR [rbp-12], 1
        jle     .L4
        mov     DWORD PTR [rbp-16], 2
        jmp     .L5
.L6:
        mov     eax, DWORD PTR [rbp-16]
        add     DWORD PTR [rbp-4], eax
        add     DWORD PTR [rbp-16], 1
.L5:
        cmp     DWORD PTR [rbp-16], 2
        jle     .L6
        mov     DWORD PTR [rbp-20], 3
        jmp     .L7
.L8:
        mov     eax, DWORD PTR [rbp-20]
        add     DWORD PTR [rbp-4], eax
        add     DWORD PTR [rbp-20], 1
.L7:
        cmp     DWORD PTR [rbp-20], 3
        jle     .L8
        mov     DWORD PTR [rbp-24], 4
        jmp     .L9
.L10:
        mov     eax, DWORD PTR [rbp-24]
        add     DWORD PTR [rbp-4], eax
        add     DWORD PTR [rbp-24], 1
.L9:
        cmp     DWORD PTR [rbp-24], 4
        jle     .L10
        mov     DWORD PTR [rbp-28], 5
        jmp     .L11
.L12:
        mov     eax, DWORD PTR [rbp-28]
        add     DWORD PTR [rbp-4], eax
        add     DWORD PTR [rbp-28], 1
.L11:
        cmp     DWORD PTR [rbp-28], 5
        jle     .L12
        mov     DWORD PTR [rbp-32], 6
        jmp     .L13
.L14:
        mov     eax, DWORD PTR [rbp-32]
        add     DWORD PTR [rbp-4], eax
        add     DWORD PTR [rbp-32], 1
.L13:
        cmp     DWORD PTR [rbp-32], 6
        jle     .L14
        mov     DWORD PTR [rbp-36], 7
        jmp     .L15
.L16:
        mov     eax, DWORD PTR [rbp-36]
        add     DWORD PTR [rbp-4], eax
        add     DWORD PTR [rbp-36], 1
.L15:
        cmp     DWORD PTR [rbp-36], 7
        jle     .L16
        mov     DWORD PTR [rbp-40], 8
        jmp     .L17
.L18:
        mov     eax, DWORD PTR [rbp-40]
        add     DWORD PTR [rbp-4], eax
        add     DWORD PTR [rbp-40], 1
.L17:
        cmp     DWORD PTR [rbp-40], 8
        jle     .L18
        mov     DWORD PTR [rbp-44], 9
        jmp     .L19
.L20:
        mov     eax, DWORD PTR [rbp-44]
        add     DWORD PTR [rbp-4], eax
        add     DWORD PTR [rbp-44], 1
.L19:
        cmp     DWORD PTR [rbp-44], 9
        jle     .L20
        mov     DWORD PTR [rbp-48], 10
        jmp     .L21
.L22:
        mov     eax, DWORD PTR [rbp-48]
        add     DWORD PTR [rbp-4], eax
        add     DWORD PTR [rbp-48], 1
.L21:
        cmp     DWORD PTR [rbp-48], 10
        jle     .L22
        add     DWORD PTR [rbp-8], 1
.L2:
        cmp     DWORD PTR [rbp-8], 12
        jle     .L23
        mov     DWORD PTR [rbp-52], 0
        jmp     .L24
.L45:
        mov     DWORD PTR [rbp-56], 1
        jmp     .L25
.L26:
        mov     eax, DWORD PTR [rbp-56]
        sub     DWORD PTR [rbp-4], eax
        add     DWORD PTR [rbp-56], 1
.L25:
        cmp     DWORD PTR [rbp-56], 1
        jle     .L26
        mov     DWORD PTR [rbp-60], 2
        jmp     .L27
.L28:
        mov     eax, DWORD PTR [rbp-60]
        sub     DWORD PTR [rbp-4], eax
        add     DWORD PTR [rbp-60], 1
.L27:
        cmp     DWORD PTR [rbp-60], 2
        jle     .L28
        mov     DWORD PTR [rbp-64], 3
        jmp     .L29
.L30:
        mov     eax, DWORD PTR [rbp-64]
        sub     DWORD PTR [rbp-4], eax
        add     DWORD PTR [rbp-64], 1
.L29:
        cmp     DWORD PTR [rbp-64], 3
        jle     .L30
        mov     DWORD PTR [rbp-68], 4
        jmp     .L31
.L32:
        mov     eax, DWORD PTR [rbp-68]
        sub     DWORD PTR [rbp-4], eax
        add     DWORD PTR [rbp-68], 1
.L31:
        cmp     DWORD PTR [rbp-68], 4
        jle     .L32
        mov     DWORD PTR [rbp-72], 5
        jmp     .L33
.L34:
        mov     eax, DWORD PTR [rbp-72]
        sub     DWORD PTR [rbp-4], eax
        add     DWORD PTR [rbp-72], 1
.L33:
        cmp     DWORD PTR [rbp-72], 5
        jle     .L34
        mov     DWORD PTR [rbp-76], 6
        jmp     .L35
.L36:
        mov     eax, DWORD PTR [rbp-76]
        sub     DWORD PTR [rbp-4], eax
        add     DWORD PTR [rbp-76], 1
.L35:
        cmp     DWORD PTR [rbp-76], 6
        jle     .L36
        mov     DWORD PTR [rbp-80], 7
        jmp     .L37
.L38:
        mov     eax, DWORD PTR [rbp-80]
        sub     DWORD PTR [rbp-4], eax
        add     DWORD PTR [rbp-80], 1
.L37:
        cmp     DWORD PTR [rbp-80], 7
        jle     .L38
        mov     DWORD PTR [rbp-84], 8
        jmp     .L39
.L40:
        mov     eax, DWORD PTR [rbp-84]
        sub     DWORD PTR [rbp-4], eax
        add     DWORD PTR [rbp-84], 1
.L39:
        cmp     DWORD PTR [rbp-84], 8
        jle     .L40
        mov     DWORD PTR [rbp-88], 9
        jmp     .L41
.L42:
        mov     eax, DWORD PTR [rbp-88]
        sub     DWORD PTR [rbp-4], eax
        add     DWORD PTR [rbp-88], 1
.L41:
        cmp     DWORD PTR [rbp-88], 9
        jle     .L42
        mov     DWORD PTR [rbp-92], 10
        jmp     .L43
.L44:
        mov     eax, DWORD PTR [rbp-92]
        sub     DWORD PTR [rbp-4], eax
        add     DWORD PTR [rbp-92], 1
.L43:
        cmp     DWORD PTR [rbp-92], 10
        jle     .L44
        add     DWORD PTR [rbp-52], 1
.L24:
        cmp     DWORD PTR [rbp-52], 11
        jle     .L45
        mov     eax, DWORD PTR [rbp-4]
        mov     esi, eax
        mov     edi, OFFSET FLAT:_ZSt4cout
        call    std::basic_ostream<char, std::char_traits<char> >::operator<<(int)
        mov     esi, OFFSET FLAT:_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_
        mov     rdi, rax
        call    std::basic_ostream<char, std::char_traits<char> >::operator<<(std::basic_ostream<char, std::char_traits<char> >& (*)(std::basic_ostream<char, std::char_traits<char> >&))
        mov     eax, 0
        leave
        ret