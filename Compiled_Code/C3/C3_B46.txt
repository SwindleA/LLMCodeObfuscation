.LC0:
        .string "Input: "
.LC1:
        .string "Error!"
.LC2:
        .string "True"
.LC3:
        .string "False"
main:
        push    rbp
        mov     rbp, rsp
        sub     rsp, 16
        mov     esi, OFFSET FLAT:.LC0
        mov     edi, OFFSET FLAT:_ZSt4cout
        call    std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)
        lea     rax, [rbp-3]
        mov     rsi, rax
        mov     edi, OFFSET FLAT:_ZSt3cin
        call    std::basic_istream<char, std::char_traits<char> >& std::operator>><char, std::char_traits<char> >(std::basic_istream<char, std::char_traits<char> >&, char&)
        movzx   eax, BYTE PTR [rbp-3]
        cmp     al, 97
        je      .L2
        movzx   eax, BYTE PTR [rbp-3]
        cmp     al, 101
        je      .L2
        movzx   eax, BYTE PTR [rbp-3]
        cmp     al, 105
        je      .L2
        movzx   eax, BYTE PTR [rbp-3]
        cmp     al, 111
        je      .L2
        movzx   eax, BYTE PTR [rbp-3]
        cmp     al, 117
        jne     .L3
.L2:
        mov     eax, 1
        jmp     .L4
.L3:
        mov     eax, 0
.L4:
        mov     BYTE PTR [rbp-1], al
        movzx   eax, BYTE PTR [rbp-3]
        cmp     al, 65
        je      .L5
        movzx   eax, BYTE PTR [rbp-3]
        cmp     al, 69
        je      .L5
        movzx   eax, BYTE PTR [rbp-3]
        cmp     al, 73
        je      .L5
        movzx   eax, BYTE PTR [rbp-3]
        cmp     al, 79
        je      .L5
        movzx   eax, BYTE PTR [rbp-3]
        cmp     al, 85
        jne     .L6
.L5:
        mov     eax, 1
        jmp     .L7
.L6:
        mov     eax, 0
.L7:
        mov     BYTE PTR [rbp-2], al
        movzx   eax, BYTE PTR [rbp-3]
        movsx   eax, al
        mov     edi, eax
        call    isalpha
        test    eax, eax
        jne     .L8
        mov     edi, OFFSET FLAT:.LC1
        mov     eax, 0
        call    printf
        jmp     .L9
.L8:
        cmp     BYTE PTR [rbp-1], 0
        jne     .L10
        cmp     BYTE PTR [rbp-2], 0
        je      .L11
.L10:
        mov     esi, OFFSET FLAT:.LC2
        mov     edi, OFFSET FLAT:_ZSt4cout
        call    std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)
        jmp     .L9
.L11:
        mov     esi, OFFSET FLAT:.LC3
        mov     edi, OFFSET FLAT:_ZSt4cout
        call    std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)
.L9:
        mov     eax, 0
        leave
        ret